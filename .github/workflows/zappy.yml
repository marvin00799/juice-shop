name: OWASP ZAP Scan and Summary Report

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Step 1: Start your application
      - name: Start Application
        run: |
          npm install
          npm start &
          sleep 30
          curl -f http://localhost:3000 || exit 1

      # Step 2: Run ZAP baseline scan and output HTML & JSON reports
      - name: Run ZAP Baseline Scan
        run: |
          docker run --rm \
            --network host \
            -v $(pwd):/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t http://localhost:3000 \
            -r /zap/wrk/zap-report.html \
            -J /zap/wrk/zap-report.json

      # Step 3: Display vulnerability summary table in job output
      - name: Display Vulnerability Summary Table
        run: |
          echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          jq -r '
            .site[0].alerts[] |
            .riskdesc | split(" ")[0]
          ' zap-report.json | sort | uniq -c | awk '
            { printf("| %-8s | %-5s |\n", $2, $1) }
          ' >> $GITHUB_STEP_SUMMARY

      # Step 4: Upload reports as artifacts
      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-reports
          path: |
            zap-report.html
            zap-report.json
